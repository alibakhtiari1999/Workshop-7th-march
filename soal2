
// problem number 2



import java.util.Scanner;

import static java.util.Arrays.fill;
import static java.util.Arrays.sort;



public class Main
{


    public static void main(String[] args)
    {

        Scanner s = new Scanner (System.in) ;

        int numberOfGroups = s.nextInt();

        int groups [][] = new int [numberOfGroups][] ;

        int lenghOfEach [] = new int [numberOfGroups] ;

        for (int i = 0 ; i < numberOfGroups ; i++ )
        {

            lenghOfEach [i] = s.nextInt() ;

            groups [i] = new int [lenghOfEach[i]] ;

        }

        for ( int i = 0 ; i < numberOfGroups ; i++ )
        {
            for ( int j = 0 ; j < lenghOfEach[i] ; j++ )
            {
                int x = s.nextInt() ;

                groups [i][j] = x ;


            }
        }

        s.close() ;

        sortGroups ( groups ) ;

        int l = maximumLenghOfResult(groups , numberOfGroups , lenghOfEach ) ;

        int result [][] = new	int [ numberOfGroups ][ l ] ;

        result [0] = groups [0] ;

        int counterOfResult [] = new int [numberOfGroups] ;

        fill(counterOfResult,0) ;

        counterOfResult [0] = lenghOfEach [0] ;

        for ( int i = 0 ; i < numberOfGroups - 1 ; i ++ )
        {
            for ( int j = 0 ; j < lenghOfEach [i] ; j ++ )
            {
                for ( int k = j ; k < lenghOfEach [i + 1] ; k ++ )
                {
                    if ( result [i][j] == groups [i + 1][k] )
                    {
                        result [i + 1][ counterOfResult [i + 1] ++ ] = result[i][j] ;
                    }
                }
            }
        }


        int arr[] = result[ numberOfGroups - 1 ];
        int length = arr.length;
        length = removeDuplicateElements(arr, length);
        //printing array elements
        for (int i=0; i<length; i++)
        {
            System.out.print(arr[i] + " ");
        }


        /**
        for (int i = 0 ; i < )
        {
            System.out.print(i + " ");
        }
         **/


    }



    public static void sortGroups ( int groups [][] )
    {
        for ( int i = 0 ; i < groups.length ; i ++ )
        {
            sort( groups[i] );
        }
    }

    public static int maximumLenghOfResult ( int group [][] , int numberOfGroups , int lenghOfEach [] )
    {
        int l = 0 ;

        for ( int i = 0 ; i < numberOfGroups ; i ++ )
        {
            if ( l < lenghOfEach[i] )
            {
                l = lenghOfEach[i] ;
            }
        }

        return l ;
    }


    public static int removeDuplicateElements(int arr[], int n){
        if (n==0 || n==1){
            return n;
        }
        int[] temp = new int[n];
        int j = 0;
        for (int i=0; i<n-1; i++){
            if (arr[i] != arr[i+1]){
                temp[j++] = arr[i];
            }
        }
        temp[j++] = arr[n-1];
        // Changing original array
        for (int i=0; i<j; i++){
            arr[i] = temp[i];
        }
        return j;
    }


}


